import React, { useState, useEffect } from "react";
import Head from "next/head";
import Image from "next/image";
// import styles from '../styles/Home.module.css'
import Link from "next/link";
import * as Style from "../styles/homeStyles";
import api from "../services/api";
import { Swiper, SwiperSlide } from "swiper/react";
import "swiper/css";
import "swiper/css/pagination";
import { Pagination } from "swiper";
import { format } from "date-fns";
import { ptBR } from "date-fns/locale";
import { MOBILE_WIDTH } from "../src/utils/constants";
import useMediaQuery from "../src/hooks/useMediaQuery";
import Colunists from "../components/Colunists";
import RealStories from "../components/RealStories";
import PostPagination from "../components/Pagination/index";
import Posts from "../components/Posts";
import HeroTags from "../components/HomeComponents/HeroTags";
import HeroSlider from "../components/HomeComponents/HeroSlider";
import Newsletter from "../components/HomeComponents/Newsletter";
import Aside from "../components/HomeComponents/Aside";
export async function getServerSideProps() {
  //const [autor, setAutor] = useState([]);

  const swiperPost = await api
    .get(
      "https://cannalize.com.br/wp-json/wp/v2/posts?per_page=5&offset=1&_embed"
    )
    .then((res) => {
      // api
      //   .get(`https://kellek.com.br/wp-json/wp/v2/users/${res[0].author}`)
      //   .then((response) => setAutor(response.data.name));
      return res.data;
    })
    .then((response) => {
      return response;
    });

  return {
    props: {
      swiperPost,
    },
  };
}

export default function Home({ swiperPost }) {
  const [posts, setPosts] = useState([]);
  const [loading, setLoading] = useState(false);
  const [currentPage, setCurrentPage] = useState(1);
  const [postsPerPage] = useState(17);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      const res =
        await api.get(`https://cannalize.com.br/wp-json/wp/v2/posts?per_page=39&_embedded
      `);
      setPosts(res.data);
      setLoading(false);
    };

    fetchPosts();
  }, []);

  const [category, setCategory] = useState([]);

  useEffect(() => {
    try {
      api
        .get(`https://kellek.com.br/wp-json/wp/v2/categories`)
        .then((resposta) => {
          console.log(resposta.data);
          return resposta.data;
        })
        .then((response) => {
          setCategory(response);
          //   console.log(post);
        });
    } catch (error) {
      console.log(error);
    }
  }, []);

  // Get current posts
  const indexOfLastPost = currentPage * postsPerPage;
  const indexOfFirstPost = indexOfLastPost - postsPerPage;
  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);
  const firstPosts = currentPosts.slice(6, 8);
  const allPostsHome = currentPosts.slice(8);

  // Change page
  const paginate = (pageNumber) => setCurrentPage(pageNumber);

  const isMobile = useMediaQuery(MOBILE_WIDTH);
  console.log(posts);
  console.log(category);
  return (
    <div>
      <Style.AllWrapp isDesktop={!isMobile}>
        <Head>
          <title>Blog Cannalize</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Style.Article isDesktop={!isMobile}>
          <HeroTags category={category} />
          <HeroSlider swiperPost={swiperPost} />
          <section className="firstPosts">
            <Posts firstPosts={firstPosts} />
          </section>
          <div style={{ display: "flex", justifyContent: "center" }}>
            <h3>AQUI VAI UMA PUBLICIDADE</h3>
          </div>
          <Style.Grid isDesktop={!isMobile}>
            <Posts posts={allPostsHome} loading={loading} />
          </Style.Grid>
          {/* <PostPagination
            postsPerPage={postsPerPage}
            totalPosts={posts.length}
            paginate={paginate}
          /> */}
        </Style.Article>
        <Aside isDesktop={!isMobile} />
      </Style.AllWrapp>
      <Style.Newsletter>
        <Newsletter />
      </Style.Newsletter>
    </div>
  );
}
